{"version":3,"sources":["logo.svg","Map.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultIcon","L","icon","iconUrl","shadowUrl","iconShadow","MapComponent","useState","position","text","markers","setMarkers","style","width","center","lat","lng","zoom","TileLayer","attribution","url","map","marker","idx","Marker","Popup","onClick","markerIndex","prompt","newMarkers","oldMarker","index","changeText","prototype","options","App","document","title","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"sNAAe,I,2FCOXA,EAAcC,IAAEC,KAAK,CACvBC,QAASD,IACTE,UAAWC,MAIE,SAASC,IACtB,IADqC,EAGPC,mBAAS,CACrC,CAAEC,SAAU,EAAE,UAAW,UAAWC,KAAM,YAC1C,CAAED,SAAU,EAAE,UAAW,UAAWC,KAAM,eALP,mBAG9BC,EAH8B,KAGrBC,EAHqB,KAoBrC,OACE,qBAAKC,MAAO,CAAEC,MAAO,QAArB,SACE,eAAC,IAAD,CAAYC,OArBD,CAAEC,KAAM,UAAWC,IAAK,UAqBPC,KApBnB,GAoBT,UACE,cAACC,EAAA,EAAD,CACEC,YAAY,yEACZC,IAAI,uDAELV,EAAQW,KAAI,SAACC,EAAQC,GAAT,OACX,cAACC,EAAA,EAAD,CAA8BhB,SAAUc,EAAOd,SAA/C,SACE,cAACiB,EAAA,EAAD,UACE,uBAAMC,QAAS,kBAtB3B,SAAoBC,GAClB,IAAIlB,EAAOmB,OAAO,0BAA2B,IACzCC,EAAanB,EAAQW,KAAI,SAACS,EAAWC,GACvC,OAAIA,IAAUJ,EACL,2BAAKG,GAAZ,IAAuBrB,KAAMA,IAEtBqB,KAGXnB,EAAWkB,GAaoBG,CAAWT,IAAhC,cAAwCD,EAAOb,KAA/C,UAFJ,iBAAuBc,YA9BjCtB,IAAEuB,OAAOS,UAAUC,QAAQhC,KAAOF,ECInBmC,MAXf,WAEE,OADAC,SAASC,MAAQ,wBAEf,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAChC,EAAD,SCGOiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASe,eAAe,SAM1BZ,M","file":"static/js/main.4e4a56c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React, useState } from \"react\";\r\nimport { MapContainer as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";\r\nimport icon from \"leaflet/dist/images/marker-icon.png\";\r\nimport iconShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: icon,\r\n  shadowUrl: iconShadow,\r\n});\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nexport default function MapComponent() {\r\n  const center = { lat: -27.470125, lng: 153.0251 };\r\n  const zoom = 12;\r\n  const [markers, setMarkers] = useState([\r\n    { position: [-27.470125, 153.0251], text: \"Brisbane\" },\r\n    { position: [-27.370125, 153.0251], text: \"Chermside\" },\r\n  ]);\r\n\r\n  function changeText(markerIndex) {\r\n    let text = prompt(\"Please enter your note:\", \"\");\r\n    let newMarkers = markers.map((oldMarker, index) => {\r\n      if (index === markerIndex) {\r\n        return { ...oldMarker, text: text };\r\n      } else {\r\n        return oldMarker;\r\n      }\r\n    });\r\n    setMarkers(newMarkers);\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <LeafletMap center={center} zoom={zoom}>\r\n        <TileLayer\r\n          attribution='copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {markers.map((marker, idx) => (\r\n          <Marker key={`marker-${idx}`} position={marker.position}>\r\n            <Popup>\r\n              <span onClick={() => changeText(idx)}> {marker.text} </span>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n      </LeafletMap>\r\n    </div>\r\n  );\r\n}\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport MapComponent from \"./Map\";\n\nfunction App() {\n  document.title = \"My Community Landmark\";\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <MapComponent></MapComponent>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}